package org.yazgel.snow.codegen;

import java.io.File;
import org.eclipse.emf.common.util.EList;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;
import org.yazgel.snow.Entity;
import org.yazgel.snow.PersistenceModel;
import org.yazgel.snow.Property;
import org.yazgel.snow.SnowFactory;
import org.yazgel.snow.codegen.PersistenceModelGenerator;

@SuppressWarnings("all")
public class PersistenceModelGeneratorTest {
  @Rule
  public TemporaryFolder folder = new TemporaryFolder();
  
  @Test
  public void testGeneratePersistenceModel() {
  }
  
  @Test
  public void testGenerateEntity() {
    PersistenceModel persistenceModel = SnowFactory.eINSTANCE.createPersistenceModel();
    persistenceModel.setGroupId("com.akgund");
    persistenceModel.setArtifactId("myproj");
    File _root = this.folder.getRoot();
    String _string = _root.toString();
    persistenceModel.setOutputFolder(_string);
    Entity entity = SnowFactory.eINSTANCE.createEntity();
    entity.setName("Ogrenci");
    entity.setTableName("OGRENCI");
    EList<Entity> _entities = persistenceModel.getEntities();
    _entities.add(entity);
    Property propertyAd = SnowFactory.eINSTANCE.createProperty();
    propertyAd.setName("ad");
    propertyAd.setType("String");
    EList<Property> _properties = entity.getProperties();
    _properties.add(propertyAd);
    PersistenceModelGenerator persistenceModelGenerator = new PersistenceModelGenerator();
    String entityString = persistenceModelGenerator.generateEntity(entity);
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package com.akgund.myproj.model;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("@javax.persistence.Entity");
    _builder.newLine();
    _builder.append("@javax.persistence.Table(name=\"OGRENCI\")");
    _builder.newLine();
    _builder.append("public class Ogrenci {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@javax.persistence.Id");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@javax.persistence.GeneratedValue");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private Long id;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("private String ad;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public Long getId(){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.id;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setId(Long id){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.id = id;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public String getAd(){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return this.ad;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void setAd(String ad){");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("this.ad = ad;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    String _string_1 = _builder.toString();
    Assert.assertEquals(_string_1, entityString);
  }
  
  @Test
  public void testGeneratePom() {
    PersistenceModel persistenceModel = SnowFactory.eINSTANCE.createPersistenceModel();
    persistenceModel.setGroupId("com.akgund");
    persistenceModel.setArtifactId("myproj");
    File _root = this.folder.getRoot();
    String _string = _root.toString();
    persistenceModel.setOutputFolder(_string);
    Entity entity = SnowFactory.eINSTANCE.createEntity();
    entity.setName("Ogrenci");
    EList<Entity> _entities = persistenceModel.getEntities();
    _entities.add(entity);
    PersistenceModelGenerator persistenceModelGenerator = new PersistenceModelGenerator();
    String pomxml = persistenceModelGenerator.generatePom(persistenceModel);
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<?xml version=\"1.0\"?>");
    _builder.newLine();
    _builder.append("<project");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<modelVersion>4.0.0</modelVersion>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<groupId>com.akgund</groupId>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<artifactId>myproj</artifactId>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<version>1.0.0-SNAPSHOT</version>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<packaging>jar</packaging>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<name>myproj</name>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<properties>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<project.java.version>1.8</project.java.version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<!-- Dependency versions -->");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<junit.version>4.12</junit.version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<derby.version>10.9.1.0</derby.version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<guice.version>4.0</guice.version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<hibernate.version>4.3.10.Final</hibernate.version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<javaee-api.version>7.0</javaee-api.version>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</properties>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<dependencies>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<dependency>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<groupId>javax</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<artifactId>javaee-api</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<version>${javaee-api.version}</version>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<scope>provided</scope>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</dependency>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<dependency>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<groupId>org.hibernate</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<artifactId>hibernate-entitymanager</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<version>${hibernate.version}</version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</dependency>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<dependency>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<groupId>com.google.inject</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<artifactId>guice</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<version>${guice.version}</version>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</dependency>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<!-- Test dependencies -->");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<dependency>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<groupId>junit</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<artifactId>junit</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<version>${junit.version}</version>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<scope>test</scope>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</dependency>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<dependency>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<groupId>org.apache.derby</groupId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<artifactId>derby</artifactId>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<version>${derby.version}</version>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<scope>test</scope>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</dependency>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</dependencies>");
    _builder.newLine();
    _builder.append("</project>");
    _builder.newLine();
    String _string_1 = _builder.toString();
    Assert.assertEquals(_string_1, pomxml);
  }
}
